// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "auth_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "nickname", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "password_updated_at", Type: field.TypeTime},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
	}
	// AuthRolesColumns holds the columns for the "auth_roles" table.
	AuthRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"Demo", "Free", "Plus", "Pro", "Enterprise", "Support", "Admin", "SuperAdmin"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// AuthRolesTable holds the schema information for the "auth_roles" table.
	AuthRolesTable = &schema.Table{
		Name:       "auth_roles",
		Columns:    AuthRolesColumns,
		PrimaryKey: []*schema.Column{AuthRolesColumns[0]},
	}
	// AccountAuthRolesColumns holds the columns for the "account_auth_roles" table.
	AccountAuthRolesColumns = []*schema.Column{
		{Name: "account_id", Type: field.TypeUUID},
		{Name: "auth_role_id", Type: field.TypeUUID},
	}
	// AccountAuthRolesTable holds the schema information for the "account_auth_roles" table.
	AccountAuthRolesTable = &schema.Table{
		Name:       "account_auth_roles",
		Columns:    AccountAuthRolesColumns,
		PrimaryKey: []*schema.Column{AccountAuthRolesColumns[0], AccountAuthRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "account_auth_roles_account_id",
				Columns:    []*schema.Column{AccountAuthRolesColumns[0]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "account_auth_roles_auth_role_id",
				Columns:    []*schema.Column{AccountAuthRolesColumns[1]},
				RefColumns: []*schema.Column{AuthRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		AuthRolesTable,
		AccountAuthRolesTable,
	}
)

func init() {
	AccountsTable.Annotation = &entsql.Annotation{}
	AccountsTable.Annotation.Checks = map[string]string{
		"account_chk_auth_id_password_not_null": "auth_id IS NOT NULL OR password IS NOT NULL",
	}
	AccountAuthRolesTable.ForeignKeys[0].RefTable = AccountsTable
	AccountAuthRolesTable.ForeignKeys[1].RefTable = AuthRolesTable
}
